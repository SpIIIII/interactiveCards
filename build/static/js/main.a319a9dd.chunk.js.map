{"version":3,"sources":["pages/sideBar.js","pages/nodes/nodes.js","backend/nodes.js","backend/graphs.js","pages/mainCard.js","App.js","index.js"],"names":["SideBarPunct","useState","selected","tagSelect","thisElRef","useRef","onClick","current","className","onMouseEnter","onMouseLeave","ref","SideBar","Node","props","hovered","classList","contains","remove","add","classes","type","x","exNode","upd","title","text","tytle","childs","parents","this","child","push","parent","node","map","test","strParents","every","t","includes","console","log","allNodes","Приветствие","Отключить","Graph","nodes","usedNodes","tree","depth","root","populating","exclNodes","parentNode","newNode","addParent","addChilds","tempChilds","addChild","nodefy","floor","isEqual","length","tempNodes","nod","isChildAdd","getFloor","intercept","filter","ecxlNodes","MainCard","rows","forceUpdate","setValue","value","useForceUpdate","excludeNodes","n","target","textContent","graph_","represente","r","nods","i","id","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"yOAEA,SAASA,IAAgB,IAAD,EACQC,oBAAS,GADjB,mBACfC,EADe,KACLC,EADK,KAEhBC,EAAYC,iBAAO,MAgBzB,OACE,yBACEC,QAjBe,WACjBH,GAAU,GACVC,EAAUG,QAAQC,UAAY,iBAgB5BC,aAdkB,WACfP,IACHE,EAAUG,QAAQC,UAAY,qBAa9BE,aAViB,WACdR,IACHE,EAAUG,QAAQC,UAAY,YAS9BG,IAAKP,GAJP,UAyCWQ,MA9Bf,WACE,OACE,oCACA,yBAAKJ,UAAU,qBACf,yBAAKA,UAAU,iCACb,wBAAIA,UAAU,wBACZ,4BACE,kBAACR,EAAD,OAEF,4BACE,kBAACA,EAAD,OAEF,4BACE,kBAACA,EAAD,OAEF,4BACE,kBAACA,EAAD,OAEF,4BACE,kBAACA,EAAD,OAEF,4BACE,kBAACA,EAAD,W,OCvBKa,MA5Bf,SAAcC,GACZ,IAAMV,EAAYC,mBACZU,EAAU,WACVX,EAAUG,QAAQS,UAAUC,SAAS,eAAiBb,EAAUG,QAAQS,UAAUE,OAAO,eACxFd,EAAUG,QAAQS,UAAUG,IAAI,gBAcnCC,EAAU,oBADH,CAAC,eAAgB,WAAY,oBAAW,WACZN,EAAMO,KAAK,GAElD,OACE,yBAAKb,UAAWY,EAASX,aAAcM,EAAST,QAAS,SAAAgB,GAAMR,EAAMS,OAAOD,GAbxElB,EAAUG,QAAQS,UAAUC,SAAS,gBAEvCb,EAAUG,QAAQS,UAAUE,OAAO,gBAGnCd,EAAUG,QAAQS,UAAUG,IAAI,gBAQ2DL,EAAMU,OAAQd,aAAcK,EAASJ,IAAKP,GACrI,0BAAMI,UAAU,mCAAmCM,EAAMW,OACzD,yBAAKjB,UAAU,8BAA8BM,EAAMY,Q,qBC1BnDb,E,WACJ,WAAYc,GAAwD,IAAjDD,EAAgD,uDAAzC,GAAIL,EAAqC,uDAA9B,EAAGO,EAA2B,uDAAlB,GAAIC,EAAc,uDAAJ,GAAI,oBACjEC,KAAKH,MAAQA,EACbG,KAAKJ,KAAOA,EACZI,KAAKT,KAAOA,EACZS,KAAKF,OAASA,EACdE,KAAKD,QAAUA,E,qDAERE,GACPD,KAAKF,OAAOI,KAAKD,K,gCAETE,GACRH,KAAKD,QAAQG,KAAKC,K,8BAEZC,GACN,OAAOA,EAAKP,QAAUG,KAAKH,Q,mCAG3B,OAAOG,KAAKD,QAAQM,KAAI,SAACb,GAAD,OAAOA,EAAEK,W,qCAEV,IAAZE,EAAW,uDAAH,GACfO,EAAQN,KAAKO,aAAaC,OAAM,SAAAC,GAAC,OAAIV,EAAQW,SAASD,MAE1D,OADAE,QAAQC,IAAIZ,KAAKH,MAAOE,EAASC,KAAKO,aAAcD,GAC7CA,M,KAiGLO,EAAQ,mDA7FM,CAClBC,qEAAa,CACXb,MAAO,CACL,4EACA,wFACA,mIACA,uHACA,8FACA,oGACA,0GACA,4JAEFL,KAAM,+RACNL,KAAM,GAER,uEAAiB,CACfU,MAAO,CAAC,oIACRL,KAAM,mNACNL,KAAM,KAkEO,CACf,0IAA6B,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC1D,sHAAwB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACrD,wFAAmB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAChD,mIAA2B,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACxDwB,yDAAW,CAAEd,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACxC,gHAAuB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,KA1CpC,CAChB,0DAAc,CACZU,MAAO,CAAC,4JACRL,KAAM,GACNL,KAAM,GAER,gEAAe,CACbU,MAAO,CAAC,4JACRL,KAAM,GACNL,KAAM,GAER,kDAAgB,CAAEU,MAAO,CAAC,QAASL,KAAM,GAAIL,KAAM,GACnD,mDAAiB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC9C,kDAAgB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC7C,oGAAqB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAClD,sHAAwB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACrD,qEAAoB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACjD,wFAAmB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAChD,gHAAuB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACpD,6HAA0B,CACxBU,MAAO,CAAC,yDAAa,iHACrBL,KAAM,GACNL,KAAM,GAER,2JAA+B,CAC7BU,MAAO,CAAC,kDAAgB,wDAAiB,oDAAa,oDAAa,QACnEL,KAAM,GACNL,KAAM,GAER,kDAAgB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC7C,wDAAiB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC9C,oDAAa,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC1C,oDAAa,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAC1C,KAAQ,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,KA3DtB,CACf,4EAAiB,CACfU,MAAO,CACL,gEACA,0DACA,kDACA,mDACA,gHACA,mDAEFL,KAAM,GACNL,KAAM,GAER,wFAAmB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAChD,8FAAoB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACjD,mIAA2B,CAAEU,MAAO,CAAC,wEAAkBL,KAAM,GAAIL,KAAM,GACvE,uHAAyB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GACtD,oGAAqB,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,GAClD,0GAAsB,CACpBU,MAAO,CAAC,8HACRL,KAAM,GACNL,KAAM,GAER,2JAA+B,CAAEU,MAAO,GAAIL,KAAM,GAAIL,KAAM,K,uBCtExDyB,E,WACJ,WAAYC,GAAQ,oBAClBjB,KAAKiB,MAAQA,EACbjB,KAAKkB,UAAY,GACjBlB,KAAKmB,KAAO,CAAC,sEACbnB,KAAKoB,MAAQ,EACbpB,KAAKqB,KAAO,IAAItC,EACd,qEACA,gSAEFiB,KAAKsB,aACLtB,KAAKuB,UAAY,G,mDAGZnB,EAAMoB,GACT,IAAIC,EAAU,IAAI1C,EAAKqB,GAIvB,OAHAqB,EAAQC,UAAUF,GAClBxB,KAAK2B,UAAUF,GACfzB,KAAKkB,UAAUhB,KAAKE,GACbqB,I,gCAGDD,GACR,IAAII,EAAa5B,KAAKiB,MAAMO,EAAW3B,OAAOI,MAC9CuB,EAAWjC,KAAOS,KAAKiB,MAAMO,EAAW3B,OAAON,KAF3B,oBAGFqC,GAHE,IAGpB,2BAA8B,CAAC,IAAtB3B,EAAqB,QACxBD,KAAKkB,UAAUR,SAAST,IAE1BuB,EAAWK,SAAS7B,KAAK8B,OAAO7B,EAAOuB,KANvB,iC,mCAapB,OADAxB,KAAK2B,UAAU3B,KAAKqB,MACbrB,KAAKqB,O,iCAGHU,EAAO9B,GAAQ,IAAD,gBACP8B,GADO,IACvB,2BAAuB,CACrB,GADqB,QACbC,QAAQ/B,GAAQ,OAAO,GAFV,8BAIvB,OAAO,I,mIAIH8B,EAAQ,CAAC/B,KAAKqB,M,YACXU,EAAME,OAAS,G,iBACpB,O,SAAMF,E,OACFG,EAAY,G,cACAH,G,IAAhB,2BAASI,EAAc,QACrBD,EAAUhC,KAAV,MAAAgC,EAAS,YAASC,EAAIrC,S,8BAGxB,IADAiC,EAAQ,GACR,MAAgBG,EAAhB,eAASC,EAAkB,KACpBnC,KAAKoC,WAAWL,EAAOI,IAAMJ,EAAM7B,KAAKiC,G,iGAI7B,IAAD,EAAZpC,EAAY,uDAAJ,GACTD,EAAS,GACT8B,EAAa,GAFA,cAGD7B,GAHC,IAGjB,2BAAyB,CAAC,IAAjBoC,EAAgB,QACrBP,EAAW1B,KAAX,MAAA0B,EAAU,YAASO,EAAIrC,UAJV,8BAMjB,cAAgB8B,EAAhB,eAA4B,CAAvB,IAAIO,EAAG,KACLnC,KAAKoC,WAAWtC,EAAQqC,IAAMrC,EAAOI,KAAKiC,GAEjD,OAAOrC,I,+IAOT,OAJUyB,E,+BAAY,GACtBvB,KAAKuB,UAAYA,EACbxB,EAAU,CAACC,KAAKqB,MAChBvB,EAAS,G,SACPC,E,uGAGJ,OADAD,EAAS,EAAKuC,SAAStC,G,SACjBD,E,QACFwC,EAAYxC,EAAOO,KAAI,SAAAb,GAAC,OAAEA,EAAEK,SAAO0C,QAAO,SAAA/C,GAAC,OAAE,EAAK+B,UAAUb,SAASlB,OAC3DyC,OAAO,IACnBnC,EAAOA,EAAOyC,QAAO,SAAA/C,GAAC,OAAE8C,EAAU5B,SAASlB,EAAEK,WAG/CE,EAAUD,E,sDARNC,EAAQkC,OAAO,G,kICzErBO,EAAY,GAOhB,SAASC,IACP,IAAIC,EAAO,GACG,GACRxC,KAAK,CAAC,uEACZ,IAAMyC,EATR,WAA2B,IAAD,EACExE,mBAAS,GADX,mBACVyE,GADU,WAExB,OAAO,kBAAMA,GAAS,SAAAC,GAAK,QAAMA,MAObC,GAEpB,SAASC,EAAa3C,GACpB,IAAI4C,EAAI5C,EAAK6C,OAAOC,YAChBV,EAAU9B,SAASsC,GACrBR,EAAYA,EAAUD,QAAO,SAAC/C,GAAD,OAAOA,IAAMwD,KACrCR,EAAUtC,KAAK8C,GAExB,IAZkB,EAYZG,EAAS,IAAInC,EAAMH,GAZP,cAaJsC,EAAOC,WAAWZ,IAbd,IAalB,2BAA4C,CAAC,IAAD,EAAnCa,EAAmC,QACtCC,EAAO,GAD+B,cAE5BD,GAF4B,IAE1C,2BAAiB,CAAC,IAATE,EAAQ,QACfD,EAAKpD,KACH,kBAAC,EAAD,CACEP,MAAO4D,EAAE1D,MACTN,KAAMgE,EAAEhE,KACRK,KAAM2D,EAAE3D,KACRH,OAAQsD,EACRrD,IAAKiD,MAT+B,8BAa1CD,EAAKxC,KACH,yBAAKxB,UAAU,wCAAwC4E,KA3BzC,8BA8BlB,OAAO,yBAAK5E,UAAU,sBAAsB8E,GAAG,SAASd,GCrC3C,SAASe,IACtB,OACE,yBAAK/E,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC+D,EAAD,QCLR,IAAMiB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACN,EAAD,OAEFC,K","file":"static/js/main.a319a9dd.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nfunction SideBarPunct() {\r\n  const [selected, tagSelect] = useState(false);\r\n  const thisElRef = useRef(null);\r\n  const makeSelect = () => {\r\n    tagSelect(true);\r\n    thisElRef.current.className = \"barTextSelect\";\r\n  };\r\n  const makePreSelect = () => {\r\n    if (!selected) {\r\n      thisElRef.current.className = \"barTextPreSelect\";\r\n    }\r\n  };\r\n  const makeUnSelect = () => {\r\n    if (!selected) {\r\n      thisElRef.current.className = \"barText\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={makeSelect}\r\n      onMouseEnter={makePreSelect}\r\n      onMouseLeave={makeUnSelect}\r\n      ref={thisElRef}\r\n    >\r\n      test 1\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SideBar() {\r\n  return (\r\n    <>\r\n    <div className=\"fakeBar col-sm-2\"></div>\r\n    <div className=\"sideBar sideBarFixed col-sm-2\">\r\n      <ul className=\"barText header_style\">\r\n        <li>\r\n          <SideBarPunct />\r\n        </li>\r\n        <li>\r\n          <SideBarPunct />\r\n        </li>\r\n        <li>\r\n          <SideBarPunct />\r\n        </li>\r\n        <li>\r\n          <SideBarPunct />\r\n        </li>\r\n        <li>\r\n          <SideBarPunct />\r\n        </li>\r\n        <li>\r\n          <SideBarPunct />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideBar;","import React, {useRef, } from \"react\";\n\n\nfunction Node(props) {\n  const thisElRef = useRef()\n  const hovered = ()=>{\n    if (thisElRef.current.classList.contains(\"nodeHovered\"))  thisElRef.current.classList.remove(\"nodeHovered\")\n    else thisElRef.current.classList.add(\"nodeHovered\")\n  } \n\n  const selected = (x)=>{\n    if (thisElRef.current.classList.contains(\"nodeSelected\"))  {\n      \n      thisElRef.current.classList.remove(\"nodeSelected\")\n    }\n    else {\n      thisElRef.current.classList.add(\"nodeSelected\")\n    } \n    // excludeNodes(x.target.textContent)\n  }\n  const cl = [\"nodeResponse\", \"nodeFact\", \"nodeАсt\", \"nodeReq\" ]\n  let classes = \"col-md-auto node \" + cl[props.type-1]\n\n  return (\n    <div className={classes} onMouseEnter={hovered} onClick={x => {props.exNode(x); selected(x); props.upd()}} onMouseLeave={hovered} ref={thisElRef}>\n      <span className=\" header_style node_header_color\">{props.title}</span>\n      <div className=\"node_text_color text_style\">{props.text}</div>\n    </div>\n  );\n}\n\nexport default Node;\n","class Node {\n  constructor(tytle, text = \"\", type = 0, childs = [], parents = []) {\n    this.tytle = tytle;\n    this.text = text;\n    this.type = type;\n    this.childs = childs;\n    this.parents = parents;\n  }\n  addChild(child) {\n    this.childs.push(child);\n  }\n  addParent(parent) {\n    this.parents.push(parent);\n  }\n  isEqual(node) {\n    return node.tytle === this.tytle;\n  }\n  strParents() {\n    return this.parents.map((x) => x.tytle);\n  }\n  isAllParents(parents=[]){\n    let test =  this.strParents().every(t => parents.includes(t))\n    console.log(this.tytle, parents, this.strParents(), test)\n    return test\n  }\n}\n\nconst speachNodes = {\n  Приветствие: {\n    child: [\n      \"Нет интернета\",\n      \"Низкая скорость\",\n      \"Уточнить номер договора\",\n      \"Уточнить время заявки\",\n      \"Перенести заявку\",\n      \"Частые пропадания\",\n      \"Отключить интернет\",\n      \"Подключить обещанный платеж\"\n    ],\n    text: \"Здравствуйте это компания Feonet, оператор _____ чем могу помочь\",\n    type: 1\n  },\n  \"Узнать адресc\": {\n    child: [\"Сообщить номер договора\"],\n    text: \"Назвоите пожалуйства свой полный адрес\",\n    type: 1\n  }\n};\n\nconst reqNodes = {\n  \"Нет интернета\": {\n    child: [\n      \"Есть сессия\",\n      \"Нет сессии\",\n      \"IPoE абонент\",\n      \"PPPoE абонент\",\n      \"Подключение оптикой\",\n      \"GPON абонент\"\n    ],\n    text: \"\",\n    type: 4\n  },\n  \"Низкая скорость\": { child: [], text: \"\", type: 4 },\n  \"Перенести заявку\": { child: [], text: \"\", type: 4 },\n  \"Уточнить номер договора\": { child: [\"Узнать адресc\"], text: \"\", type: 4 },\n  \"Уточнить время заявки\": { child: [], text: \"\", type: 4 },\n  \"Частые пропадания\": { child: [], text: \"\", type: 4 },\n  \"Отключить интернет\": {\n    child: [\"Проверить логин пароль\"],\n    text: \"\",\n    type: 4\n  },\n  \"Подключить обещанный платеж\": { child: [], text: \"\", type: 4 }\n};\n\nconst factNodes = {\n  \"Нет сессии\": {\n    child: [\"Проверить индикацию роутера\"],\n    text: \"\",\n    type: 2\n  },\n  \"Есть сессия\": {\n    child: [\"Проверить индикацию роутера\"],\n    text: \"\",\n    type: 2\n  },\n  \"IPoE абонент\": { child: [\"TEST\"], text: \"\", type: 2 },\n  \"PPPoE абонент\": { child: [], text: \"\", type: 2 },\n  \"GPON абонент\": { child: [], text: \"\", type: 2 },\n  \"Подключен оптикой\": { child: [], text: \"\", type: 2 },\n  \"Недостаточно средств\": { child: [], text: \"\", type: 2 },\n  \"Подключен к wifi\": { child: [], text: \"\", type: 2 },\n  \"Отменить заявку\": { child: [], text: \"\", type: 2 },\n  \"Подключение оптикой\": { child: [], text: \"\", type: 2 },\n  \"Проверить логин пароль\": {\n    child: [\"Отключить\", \"Восстановить данные\"],\n    text: \"\",\n    type: 2\n  },\n  \"Проверить индикацию роутера\": {\n    child: [\"wifi включен\", \"wifi выключен\", \"Линк есть\", \"Линка нет\", \"TEST\"],\n    text: \"\",\n    type: 2\n  },\n  \"wifi включен\": { child: [], text: \"\", type: 2 },\n  \"wifi выключен\": { child: [], text: \"\", type: 2 },\n  \"Линк есть\": { child: [], text: \"\", type: 2 },\n  \"Линка нет\": { child: [], text: \"\", type: 2 },\n  \"TEST\": { child: [], text: \"\", type: 2 },\n};\n\nconst actNodes = {\n  \"Заявка на ближайшее время\": { child: [], text: \"\", type: 3 },\n  \"Перезагрузить роутер\": { child: [], text: \"\", type: 3 },\n  \"Обновить сессию\": { child: [], text: \"\", type: 3 },\n  \"Сообщить номер договора\": { child: [], text: \"\", type: 3 },\n  Отключить: { child: [], text: \"\", type: 3 },\n  \"Восстановить данные\": { child: [], text: \"\", type: 3 }\n};\n\nconst allNodes = { ...speachNodes, ...actNodes, ...factNodes, ...reqNodes };\n\nexport { allNodes, Node };\n","import { Node } from \"./nodes\";\n\nclass Graph {\n  constructor(nodes) {\n    this.nodes = nodes;\n    this.usedNodes = [];\n    this.tree = [\"Приветствие\"];\n    this.depth = 0;\n    this.root = new Node(\n      \"Приветствие\",\n      \"Здравствуйте это компания Feonet, оператор _____ чем могу помочь\"\n    );\n    this.populating();\n    this.exclNodes = [];\n  }\n\n  nodefy(node, parentNode) {\n      let newNode = new Node(node);\n      newNode.addParent(parentNode);\n      this.addChilds(newNode);\n      this.usedNodes.push(node)\n      return newNode;\n \n  }\n  addChilds(parentNode) {\n    let tempChilds = this.nodes[parentNode.tytle].child;\n    parentNode.type = this.nodes[parentNode.tytle].type;\n    for (let child of tempChilds) {\n      if(!this.usedNodes.includes(child)){\n\n        parentNode.addChild(this.nodefy(child, parentNode));\n      }\n    }\n  }\n\n  populating() {\n    this.addChilds(this.root);\n    return this.root;\n  }\n\n  isChildAdd(floor, child) {\n    for (let nod of floor) {\n      if (nod.isEqual(child)) return true\n    }\n    return false;\n  }\n \n  *getFloors() {\n    let floor = [this.root];\n    while (floor.length > 0) {\n      yield floor;\n      let tempNodes = [];\n      for (let nod of floor) {\n        tempNodes.push(...nod.childs);\n      }\n      floor = [];\n      for (let nod of tempNodes) {\n        if (!this.isChildAdd(floor, nod)) floor.push(nod);\n      }\n    }\n  }\n  getFloor(parents=[]) {\n      let childs = [];\n      let tempChilds = []\n      for (let nod of parents) {\n          tempChilds.push(...nod.childs);\n      }\n      for (let nod of tempChilds) {\n        if (!this.isChildAdd(childs, nod)) childs.push(nod);\n      }\n      return childs\n  }\n\n  *represente(exclNodes = []) {\n    this.exclNodes = exclNodes;\n    let parents = [this.root]\n    let childs = []\n    yield parents\n    while(parents.length>0){\n      childs = this.getFloor(parents)\n      yield childs\n      let intercept = childs.map(x=>x.tytle).filter(x=>this.exclNodes.includes(x))\n      if (intercept.length>0){\n        childs=childs.filter(x=>intercept.includes(x.tytle))\n        // childs=childs.filter(x=>x.isAllParents(this.exclNodes))\n      }\n      parents = childs\n    }\n  }\n}\n\n// function makeGraph(allNodes, nodes, tree, excl = []) {\n//   let chNodes = [];\n//   for (let e of excl) {\n//     if (nodes.includes(e)) {\n//       nodes = nodes.filter((x) => excl.includes(x));\n//     }\n//   }\n//   for (let node of nodes) {\n//     let tempNodes = [];\n//     tempNodes = allNodes[node].child;\n//     chNodes.push(...tempNodes);\n//   }\n//   if (chNodes.length === 0) return tree;\n\n//   tree.push(new Set(chNodes));\n//   return makeGraph(allNodes, chNodes, tree, excl);\n// }\n// const graph = [];\n// graph.push([\"Приветствие\"]);\n// let resultGraph = makeGraph(copyNodes, [\"Приветствие\"], graph, ecxlNodes);\n\nexport { Graph };\n","import React, { useState } from \"react\";\nimport Node from \"./nodes/nodes\";\nimport { allNodes } from \"../backend/nodes\";\nimport {  Graph } from \"../backend/graphs\";\n\nlet ecxlNodes = [];\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => ++value); // update the state to force render\n}\n\nfunction MainCard() {\n  let rows = [];\n  const graph = [];\n  graph.push([\"Приветствие\"]);\n  const forceUpdate = useForceUpdate();\n\n  function excludeNodes(node) {\n    let n = node.target.textContent;\n    if (ecxlNodes.includes(n)) {\n      ecxlNodes = ecxlNodes.filter((x) => x !== n);\n    } else ecxlNodes.push(n);\n  }\n  const graph_ = new Graph(allNodes);\n  for (let r of graph_.represente(ecxlNodes)) {\n    let nods = [];\n    for (let i of r) {\n      nods.push(\n        <Node\n          title={i.tytle}\n          type={i.type}\n          text={i.text}\n          exNode={excludeNodes}\n          upd={forceUpdate}\n        />\n      );\n    }\n    rows.push(\n      <div className=\"row justify-content-center rowModule\">{nods}</div>\n    );\n  }\n  return <div className=\" col-sm-10 mainCard\" id=\"mainC\">{rows}</div>;\n}\n\nexport { MainCard };\n","import React from \"react\";\nimport \"./styles.css\";\nimport SideBar from \"./pages/sideBar\";\nimport {MainCard} from \"./pages/mainCard\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"row cont\">\n        <SideBar />\n        <MainCard />\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}