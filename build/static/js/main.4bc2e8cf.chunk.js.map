{"version":3,"sources":["pages/sideBar.js","pages/nodes/nodes.js","pages/mainCard.js","backend/nodes.js","App.js","backend/graphs.js","index.js"],"names":["first","className","icon","faBookmark","second","faBuffer","SideBarPunct","props","sideBarPunktName","sideBarrArrow","useState","selected","togSelect","subPunktsRef","useRef","arrowRef","makeHovered","x","currentTarget","classList","add","makeUnHovered","remove","size","onClick","current","childNodes","style","display","onMouseEnter","onMouseLeave","name","ref","faChevronRight","graph","excludeNodes","upd","SideBar","thisElemRef","useWindowSize","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","barSize","barPunctSize","classNmaes","console","log","Node","thisElRef","sel","excl","classes","type","exNode","title","text","ecxlNodes","GraphWrapper","rows","forceUpdate","setValue","value","useForceUpdate","node","n","target","textContent","includes","filter","push","represente","nods","i","tytle","excluded","id","MainCard","childs","parents","this","added","multiParetn","child","parent","map","strParents","length","every","t","allNodes","Приветствие","multiP","nodes","depth","root","exclNodes","cash","populating","parentNode","newNode","undefined","findNodeByTytle","addChilds","addParent","tempChilds","addChild","nodefy","startNode","Object","keys","values","floor","tempNodes","nod","isNodAdded","resetNodesAd","getFloor","isAllParents","intercept","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4bc2e8cf.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleRight,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faBookmark } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faBuffer } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst first = (\r\n  <span className=\"sideBarPunktIcon\">\r\n    <FontAwesomeIcon icon={faBookmark} />\r\n  </span>\r\n);\r\nconst second = (\r\n  <span className=\"sideBarPunktIcon\">\r\n    <FontAwesomeIcon icon={faBuffer} />\r\n  </span>\r\n);\r\n\r\nfunction SideBarPunct(props) {\r\n  const [selected, togSelect] = useState(false);\r\n  const subPunktsRef = useRef(null);\r\n  const arrowRef = useRef(null);\r\n\r\n  const makeHovered = (x) => {\r\n    x.currentTarget.classList.add(\"barTextPreSelect\");\r\n  };\r\n  const makeUnHovered = (x) => {\r\n    x.currentTarget.classList.remove(\"barTextPreSelect\");\r\n  };\r\n\r\n  const makeSelected = (x) => {\r\n    if (selected) {\r\n      arrowRef.current.childNodes[0].classList.remove(\"sideBarArrowSelected\");\r\n      subPunktsRef.current.style.display = \"none\";\r\n      x.currentTarget.classList.remove(\"barTextSelect\");\r\n    } else {\r\n      arrowRef.current.childNodes[0].classList.add(\"sideBarArrowSelected\");\r\n      subPunktsRef.current.style.display = \"block\";\r\n      x.currentTarget.classList.add(\"barTextSelect\");\r\n    }\r\n    togSelect(!selected);\r\n  };\r\n\r\n  const subPunktClick = () => {\r\n    props.graph.excludeNodes([\r\n      \"Приветствие\",\r\n      \"Нет интернета\",\r\n      \"Есть сессия\",\r\n      \"Нет сессии\",\r\n      \"Проверить индикацию роутера\",\r\n      \"IPoE абонент\",\r\n      \"TEST\"\r\n    ]);\r\n    props.upd();\r\n  };\r\n  \r\n  let sideBarPunktName\r\n  let sideBarrArrow\r\n\r\n  if(props.size===1){\r\n    sideBarPunktName = \"smallSideBarPunktName\"\r\n    sideBarrArrow = \"sideBarArrow smallSideBarArrow\"\r\n    \r\n  }else{\r\n\r\n    sideBarPunktName = \"\"\r\n    sideBarrArrow = \"sideBarArrow\"\r\n  }\r\n\r\n\r\n  return (\r\n    <li className=\"sideBarPunkts\">\r\n      <div\r\n        className=\"sideBarPunkt dont_select_text\"\r\n        onClick={makeSelected}\r\n        onMouseEnter={makeHovered}\r\n        onMouseLeave={makeUnHovered}\r\n      >\r\n        {props.icon}\r\n        <span className={sideBarPunktName}>{props.name}</span>\r\n        <div className={sideBarrArrow} ref={arrowRef}>\r\n          <FontAwesomeIcon className=\"FAArrow\" icon={faChevronRight} />\r\n        </div>\r\n      </div>\r\n      <ul className=\"sideBarSubPunkts dont_select_text\" ref={subPunktsRef}>\r\n        <li\r\n          className=\"sideBarSubPunkt\"\r\n          onMouseEnter={makeHovered}\r\n          onMouseLeave={makeUnHovered}\r\n          onClick={subPunktClick}\r\n        >\r\n          Шаблон 1\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction SideBar(props) {\r\n  const thisElemRef = useRef();\r\n  \r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n  const barSize = useWindowSize()[0] > 880 ? \"sideBarOrdinar\" : \"sideBarSmall\";\r\n  const barPunctSize = useWindowSize()[0] > 880 ? 0 : 1;\r\n  const classNmaes = \" barText header_style sideBarFixed sideBar \" + barSize;\r\n  return (\r\n    <>\r\n      <div className=\"fakeBar col-sm-2\"></div>\r\n      <ul className={classNmaes} ref={thisElemRef}>\r\n        <SideBarPunct\r\n          name={\"Шаблоны\"}\r\n          icon={first}\r\n          graph={props.graph}\r\n          upd={props.upd}\r\n          size = {barPunctSize}\r\n        />\r\n        <SideBarPunct\r\n          name={\"Другое\"}\r\n          icon={second}\r\n          graph={props.graph}\r\n          upd={() => {\r\n            console.log(\"don't do a thing\");\r\n          }}\r\n          size={barPunctSize}\r\n        />\r\n        {/* <SideBarPunct />        \r\n          <SideBarPunct />        \r\n          <SideBarPunct />        \r\n          <SideBarPunct /> */}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { useRef } from \"react\";\n\nfunction Node(props) {\n  const thisElRef = useRef();\n  const hoveredOn = (x) => {\n    x.currentTarget.classList.add(\"nodeHovered\")\n  };\n\n  const hoveredOff = (x) => {\n    x.currentTarget.classList.remove(\"nodeHovered\")\n  };\n\n  const cl = [\"nodeResponse\", \"nodeFact\", \"nodeАсt\", \"nodeReq\"];\n  let sel = props.excl ? \" nodeSelected\" : \" \";\n  let classes = \"col-md-auto node \" + cl[props.type - 1] + sel;\n\n  return (\n    <div\n      className={classes}\n      onMouseEnter={hoveredOn}\n      onMouseLeave={hoveredOff}\n      onClick={(x) => {\n        props.exNode(x);\n        props.upd();\n      }}\n      ref={thisElRef}\n    >\n      <span className=\" header_style node_header_color\">{props.title}</span>\n      <div className=\"node_text_color text_style\">{props.text}</div>\n    </div>\n  );\n}\n\nexport default Node;\n","import React, { useState } from \"react\";\nimport Node from \"./nodes/nodes\";\n\nlet ecxlNodes = [\"Приветствие\"];\n\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => ++value); // update the state to force render\n}\n\nfunction GraphWrapper(props){\n  const rows = [];\n  const forceUpdate = useForceUpdate();\n\n  function excludeNodes(node) {\n    const n = node.target.textContent;\n    if (ecxlNodes.includes(n)) {\n      ecxlNodes = ecxlNodes.filter((x) => x !== n);\n    } else ecxlNodes.push(n);\n    props.graph.excludeNodes(ecxlNodes)\n  }\n  for (let pair of props.graph.represente()) {\n    const node = pair[0]\n    const nods = [];\n    for (let i of node) {\n      nods.push(\n        <Node\n          title={i.tytle}\n          type={i.type}\n          text={i.text}\n          excl={i.excluded}\n          exNode={excludeNodes}\n          upd={forceUpdate}\n        />\n      );\n    }\n    // const selected = pair[1] ? \" selectedRowModule\" : \"\"\n    const classes = \"row justify-content-center rowModule \"\n    rows.push(\n      <div className={classes}>{nods}</div>\n    );\n  }\n  return <>\n    <div className=\" col-sm-10 mainCard\" id=\"mainC\">{rows}</div>;\n  </> \n\n}\n\nfunction MainCard(props) {\n  return (\n    <>\n      <GraphWrapper graph={props.graph}/>\n    </>\n  )\n}\n\nexport { MainCard, useForceUpdate };\n","class Node {\n  constructor(tytle, text = \"\", type = 0, childs = [], parents = []) {\n    this.tytle = tytle;\n    this.text = text;\n    this.type = type;\n    this.childs = childs;\n    this.parents = parents;\n    this.added = false;\n    this.excluded = false;\n    this.multiParetn = false\n  }\n  addChild(child) {\n    this.childs.push(child);\n  }\n  addParent(parent) {\n    this.parents.push(parent);\n  }\n  isEqual(node) {\n    return node.tytle === this.tytle;\n  }\n  strParents() {\n    return this.parents.map((x) => x.tytle);\n  }\n  isAllParents(parents=[]){\n    let result\n    // console.log(this.tytle, parents, this.strParents() )\n    if (this.strParents().length > 1 && this.multiParetn){\n      result = this.strParents().every(t => parents.includes(t))\n    } \n    else result=true \n    // console.log(result)\n    return result\n  }\n}\n\n\n\n\n\nconst speachNodes = {\n  Приветствие: {\n    child: [\n      \"Нет интернета\",\n      \"Низкая скорость\",\n      \"Уточнить номер договора\",\n      \"Уточнить время заявки\",\n      \"Перенести заявку\",\n      \"Частые пропадания\",\n      \"Отключить интернет\",\n      \"Подключить обещанный платеж\"\n    ],\n    text: \"Здравствуйте это компания Feonet, оператор _____ чем могу помочь\",\n    type: 1\n  },\n  \"Узнать адресc\": {\n    child: [\"Сообщить номер договора\"],\n    text: \"Назвоите пожалуйства свой полный адрес\",\n    type: 1\n  }\n};\n\n\n\n\n\n\n\nconst reqNodes = {\n  \"Нет интернета\": {\n    child: [\n      \"Подключен напрямую\",\n      \"TEST\",\n      \"Есть сессия\",\n      \"Нет сессии\",\n      \"IPoE абонент\",\n      \"PPPoE абонент\",\n      \"Подключение оптикой\",\n      \"GPON абонент\"\n    ],\n    text: \"\",\n    type: 4\n  },\n  \"Низкая скорость\": { child: [\"Есть разрывы\", \"Пропадания пакетов пинга\", \"Проинформировать о возможных причинах низкой скорости на внутренней сети\"], text: \"\", type: 4 },\n  \"Перенести заявку\": { child: [\"TEST\"], text: \"\", type: 4 },\n  \"Уточнить номер договора\": { child: [\"Узнать адресc\"], text: \"\", type: 4 },\n  \"Уточнить время заявки\": { child: [], text: \"\", type: 4 },\n  \"Частые пропадания\": { child: [], text: \"\", type: 4 },\n  \"Отключить интернет\": {\n    child: [\"Проверить логин пароль\"],\n    text: \"\",\n    type: 4\n  },\n  \"Подключить обещанный платеж\": { child: [], text: \"\", type: 4 }\n};\n\n\n\n\n\nconst factNodes = {\n  \"Нет сессии\": {child: [\"Нет линка\", \"Есть линк\"], text: \"\", type: 2 },\n  \"Есть сессия\": {child: [\"Есть разрывы\", \"Пропадания пакетов пинга\", \"Устройства не подключены к wifi\"], \n  text: \"\", type: 2},\n  \"IPoE абонент\": { child: [], text: \"\", type: 2 },\n  \"PPPoE абонент\": { child: [], text: \"\", type: 2 },\n  \"GPON абонент\": { child: [], text: \"\", type: 2 },\n  \"Подключен оптикой\": { child: [], text: \"\", type: 2 },\n  \"Недостаточно средств\": { child: [], text: \"\", type: 2 },\n  \"Подключен к wifi\": { child: [], text: \"\", type: 2 },\n  \"Отменить заявку\": { child: [], text: \"\", type: 2 },\n  \"Подключение оптикой\": { child: [], text: \"\", type: 2 },\n  \"Проверить логин пароль\": {child: [\"Отключить\", \"Восстановить данные\"], text: \"\", type: 2},\n  \"Нет линка\": {child: [\"Такиеже проблемы у соседей\", ], text: \"\", type: 2},\n  \"wifi включен\": { child: [], text: \"\", type: 2 },\n  \"wifi выключен\": { child: [], text: \"\", type: 2 },\n  \"Есть разрывы\": { child: [\"Поврежден кабель\", \"Такиеже проблемы у соседей\", \"Поставить заявку на ближайшее подходящее время\"], text: \"\", type: 2 },\n  \"Пропадания пакетов пинга\": { child: [\"Поврежден кабель\", \"Такиеже проблемы у соседей\",\"Поставить заявку на ближайшее подходящее время\"], text: \"\", type: 2 },\n  \"Такиеже проблемы у соседей\": { child: [\"Передать информацию диспеnчеру\"], text: \"\", type: 2 },\n  \"TEST\": { child: [], text: \"\", type: 2, multiP:true },\n  \"Устройства не подключены к wifi\": { child: [\"Проинструктировать о подключении устройства к wifi\", \"Сети нет в списке\"], text: \"\", type: 2 },\n  \"Сети нет в списке\": { child: [\"Сбросить настройки роутера\"], text: \"\", type: 2},\n  \"Есть линк\": { child: [\"Такиеже проблемы у соседей\"], text: \"\", type: 2},\n  \"Подключен напрямую\": { child: [\"Есть разрывы\", \"Пропадания пакетов пинга\",], text: \"\", type: 2},\n  \"Поврежден кабель\":{ child: [\"Заявка на ближайшее время\",], text: \"\", type: 2},\n};\n\n\n\n\n\n\nconst actNodes = {\n  \"Заявка на ближайшее время\": { child: [], text: \"\", type: 3 },\n  \"Перезагрузить роутер\": { child: [], text: \"\", type: 3 },\n  \"Обновить сессию\": { child: [], text: \"\", type: 3 },\n  \"Сообщить номер договора\": { child: [], text: \"\", type: 3 },\n  \"Отключить\": { child: [], text: \"\", type: 3 },\n  \"Восстановить данные\": { child: [], text: \"\", type: 3 },\n  \"Передать информацию диспеnчеру\": { child: [], text: \"\", type: 3 },\n  \"Проинструктировать о подключении устройства к wifi\": { child: [], text: \"\", type: 3 },\n  \"Сбросить настройки роутера\": { child: [], text: \"\", type: 3 },\n  \"Поставить заявку на ближайшее подходящее время\": { child: [], text: \"\", type: 3 },\n  \"Проинформировать о возможных причинах низкой скорости на внутренней сети\": { child: [], text: \"\", type: 3 },\n  \n};\n\nconst allNodes = { ...speachNodes, ...actNodes, ...factNodes, ...reqNodes };\n\nexport { allNodes, Node };\n","import React, {useState} from \"react\";\nimport \"./styles.css\";\nimport SideBar from \"./pages/sideBar\";\nimport {MainCard,} from \"./pages/mainCard\";\nimport { allNodes } from \"./backend/nodes\";\nimport {  Graph } from \"./backend/graphs\";\n\nconst graph = new Graph(allNodes);\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => ++value); // update the state to force render\n}\n\nexport default function App() {\n  \n  const upd = useForceUpdate()\n  return (\n    <div className=\"App\">\n      <div className=\"row cont\">\n        <SideBar graph={graph}  upd={upd}/>\n        <MainCard graph={graph}  />\n      </div>\n    </div>\n  );\n}","import { Node } from \"./nodes\";\n\nclass Graph {\n  constructor(nodes) {\n    this.nodes = nodes;\n    this.depth = 0;\n    this.root = new Node(\n      \"Приветствие\",\n      \"Здравствуйте это компания Feonet, оператор _____ чем могу помочь\"\n    );\n    this.exclNodes = [];\n    this.cash = {\"Приветствие\": this.root}\n    this.populating();\n  }\n\n  nodefy(node, parentNode) {\n    let newNode\n    if(this.findNodeByTytle(node, parentNode)!==undefined){\n      newNode = this.findNodeByTytle(node, parentNode)      \n    }else{\n      newNode = new Node(node);\n      this.addChilds(newNode);\n      this.cash[node] = newNode\n    }\n    \n    newNode.addParent(parentNode)\n    return newNode\n  }\n\n  addChilds(parentNode) {\n    let tempChilds = this.nodes[parentNode.tytle].child;\n    parentNode.type = this.nodes[parentNode.tytle].type;\n    parentNode.multiParetn = this.nodes[parentNode.tytle].multiP\n    for (let child of tempChilds) {\n        parentNode.addChild(this.nodefy(child, parentNode));\n    }\n  }\n\n  populating() {\n    this.addChilds(this.root);\n    // return this.root;\n  }\n\n  findNodeByTytle(tytle, startNode){\n    if (Object.keys(this.cash).includes(tytle)) return this.cash[tytle]\n    let parent = startNode\n    for (let child of parent.childs){\n      if(child.tytle === tytle) {\n        return child\n      } \n      if (child.childs.length>0) return this.findNodeByTytle(tytle, child)\n      else continue\n    }    \n  }\n\n  resetNodesAd(){\n    for (let node of Object.values(this.cash)){\n      node.added = false\n    }\n  }\n\n  isNodAdded(node){\n    if (node.added){\n      return true\n    }\n    else{\n      node.added = true\n      return false\n    }\n  }\n \n  *getFloors() {\n    let floor = [this.root];\n    while (floor.length > 0) {\n      yield floor;\n      let tempNodes = [];\n      for (let nod of floor) {\n        tempNodes.push(...nod.childs);\n      }\n      floor = [];\n      for (let nod of tempNodes) {\n        if (!this.isNodAdded(nod)) floor.push(nod);\n      }\n    }\n  }\n\n  getFloor(parents=[]) { \n      \n      let childs = [];\n      let tempChilds = []\n      for (let nod of parents) {\n          tempChilds.push(...nod.childs);\n      }\n      for (let nod of tempChilds) {\n        if (!this.isNodAdded(nod)) childs.push(nod);\n      }\n      return childs\n  }\n\n  *represente() {\n    this.resetNodesAd() \n    let parents = [this.root]\n    let childs = []\n    let selected = false\n    yield [parents, selected]\n    while(parents.length>0){\n      childs = this.getFloor(parents)\n      childs=childs.filter(x=>x.isAllParents(this.exclNodes))\n      yield [childs, selected]\n      selected = false\n      let intercept = childs.map(x=>x.tytle).filter(x=>this.exclNodes.includes(x))\n      if (intercept.length>0){\n        selected=true\n        childs=childs.filter(x=>intercept.includes(x.tytle))\n      }\n      parents = childs\n      \n    }\n  }\n\n  excludeNodes(exclNodes = []) {\n    for (let nod of Object.values(this.cash)) {\n      if (exclNodes.includes(nod.tytle)) {\n        nod.excluded = true;\n      } else {\n        nod.excluded = false;\n      }\n    }\n    this.exclNodes = exclNodes;\n  }\n}\n\n// function makeGraph(allNodes, nodes, tree, excl = []) {\n//   let chNodes = [];\n//   for (let e of excl) {\n//     if (nodes.includes(e)) {\n//       nodes = nodes.filter((x) => excl.includes(x));\n//     }\n//   }\n//   for (let node of nodes) {\n//     let tempNodes = [];\n//     tempNodes = allNodes[node].child;\n//     chNodes.push(...tempNodes);\n//   }\n//   if (chNodes.length === 0) return tree;\n\n//   tree.push(new Set(chNodes));\n//   return makeGraph(allNodes, chNodes, tree, excl);\n// }\n// const graph = [];\n// graph.push([\"Приветствие\"]);\n// let resultGraph = makeGraph(copyNodes, [\"Приветствие\"], graph, ecxlNodes);\n\nexport { Graph };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}